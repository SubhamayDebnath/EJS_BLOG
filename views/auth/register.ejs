<div class="container my-5">
  <div class="row">
    <div class="col-md-5 col-12 auth-container p-4 rounded border mx-auto">
      <div class="mb-3">
        <h3 class="text-center">Create Your Account</h3>
        <p class="text-center">Join us and start your journey today!</p>
      </div>
      <% if (error_msg.length> 0) { %>
      <div class="custom-alert-error rounded mb-2" role="alert">
        <%= error_msg %>
      </div>
      <% } %>
      <form action="/api/v1/register" onsubmit="validatePassword()" method="post" enctype="multipart/form-data">
        <div class="image-container ratio ratio-16x9 rounded overflow-hidden mx-auto mb-3">
          <img src="" alt="" id="previewImage" class="preview-image w-100 h-100 object-fit-contain">
          <label for="avatar" id="imageLabel" class="label-image-container  rounded">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-upload-cloud">
              <polyline points="16 16 12 12 8 16"></polyline>
              <line x1="12" y1="12" x2="12" y2="21"></line>
              <path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path>
            </svg>
          </label>
        </div>
        <input type="file" accept="image/*" name="avatar" id="avatar" class="d-none" required>
        <div class="form-group mb-3">
          <label for="username" class="form-label">Username</label>
          <input type="text" name="username" class="form-control mb-1" id="username" placeholder="Enter your username" required autocomplete="off">
          <p class="username-error-message text-danger"></p>
        </div>
        <div class="form-group mb-3">
          <label for="email" class="form-label">Email</label>
          <input type="email" name="email" class="form-control mb-1" id="email" placeholder="Enter your email" required autocomplete="off">
        </div>
        <div class="form-group mb-4">
          <label for="password" class="form-label">Password</label>
          <input type="password" name="password" class="form-control mb-1" id="password" placeholder="Enter your password" required autocomplete="off">
          <p class="password-error-message text-danger"></p>
        </div>
        <button class="btn btn-primary w-100" id="submit-button" type="submit">Login</button>
      </form>
      <div class="text-center mt-3">
        <p>Have an account? <a href="/login" class="ms-1">Sign in now</a>!</p>
      </div>
    </div>
  </div>
</div>
<script>
    document.getElementById('avatar').addEventListener('change', function(event) {
    const file = event.target.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const img = document.getElementById('previewImage');
        img.src = e.target.result;
        img.classList.remove('hidden');
        document.getElementById('imageLabel').classList.add('hidden')
      }
      reader.readAsDataURL(file);
    }
  });
  function validatePassword() {
    const passwordInput = document.querySelector('#password');
    const username = document.querySelector("#username");
    const email = document.querySelector("#email")
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const passwordRegex = /^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{6,25})/;
    const password = passwordInput.value;
    const usernameValue = username.value;
    const emailValue = email.value;
    if (usernameValue.length <= 3 && usernameValue.length >= 26) {
      document.querySelector('.username-error-message').innerHTML = `Username must be at 6-25 characters long`;
      username.classList.add('border-danger')
      return false;
    } else if (!passwordRegex.test(password)) {
      document.querySelector('.password-error-message').innerHTML = `Password must be 6-25 characters long, contain at least one uppercase letter, one special character, and one number.`;
      passwordInput.classList.add('border-danger')
      return false;
    } else if (!emailRegex.test(emailInput.value)) {
      document.querySelector('.email-error-message').innerHTML = `Email must be a valid email address.`;
      return false;
    }
    disableSubmitButton();
    return true;
  }
  function disableSubmitButton() {
    const submitButton = document.getElementById("submit-button");
    submitButton.disabled = true;
    submitButton.textContent = "Submitting...";
  }
</script>